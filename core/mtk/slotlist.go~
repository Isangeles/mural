/*
 * slotlist.go
 *
 * Copyright 2019 Dariusz Sikora <dev@isangeles.pl>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 *
 */

package mtk

import (
	"github.com/faiface/pixel"
)

// Struct for list with slots.
type SlotList struct {
	bg         *pixel.Sprite
	upButton   *mtk.Button
	downButton *mtk.Button
	slots      []*Slot
	spl        int // slots per line
	lines      int
	lineID     int // current line
}

// NewSlotList creates new list with slots.
func NewSlotList(slotsPerLine, lines int) *SlotList {
	sl := new(SlotList)
	sl.spl = slotsPerLine
	sl.lines = lines
	return sl
}

// Draw draws list.
func (sl *SlotList) Draw(t pixel.Target, matrix pixel.Matrix) {
	slotMove := pixel.V(0, 0)
	splCount := 0
	lineCount := 0
	startSlot := 0
	startSlot = sl.lineID * sl.spl
	for i, s := range sl.slots {
		if i < startSlot {
			continue
		}
		s.Draw(t, matrix.Moved(slotMove))
		slotMove.X += s.Bounds().W() + ConvSize(2)
		splCount += 1
		if splCount >= sl.spl {
			slotMove.X = 0
			slotMove.Y -= s.Bounds().H() + ConvSize(2)
			splCount = 0
			lineCount += 1
		}
		if lineCount > sl.lines {
			break
		}
	}
}

// Update updates list.
func (sl *SlotList) Update(win *Window) {
	for _, s := range sl.slots {
		s.Update(win)
	}
}

// Add adds specified slot to list.
func (sl *SlotList) Add(s *Slot) {
	sl.slots = append(sl.slots, s)
}

// Slots returns all slots from list.
func (sl *SlotList) Slots() []*Slot {
	return sl.slots
}

/*
 * charframe.go
 *
 * Copyright 2019 Dariusz Sikora <dev@isangeles.pl>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 *
 */

package hud

import (
	"fmt"
	
	"github.com/faiface/pixel"

	"github.com/isangeles/mural/core/object"
	"github.com/isangeles/mural/core/data"
)

// Struct for character frame with portrait
// and health/mana bars.
type CharFrame struct {
	hud      *HUD
	char     *object.Avatar
	bg       *pixel.Sprite
	portrait *pixel.Sprite
}

// newCharFrame creates new HUD character frame for
// specified character avatar.
func newCharFrame(hud *HUD, char *object.Avatar) (*CharFrame, error) {
	cf := new(CharFrame)
	cf.char = char
	bg, err := data.PictureUI("charframe.png")
	if err != nil {
		return nil, fmt.Errorf("fail_to_load_bg_picture:%v", err)
	}
	cf.bg = pixel.NewSprite(bg, bg.Bounds())
	return cf, nil
}
